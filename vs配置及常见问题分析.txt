输出目录：$(SolutionDir)\..bin\$(Platform)\$(Configuration)\

中间目录：$(SolutionDir)\..temp\$(Platform)\$(Configuration)\$(ProjectName)\

永久性的方法：（解决项目过大问题）
工具 → 选项 → 文本编辑器 → C/C++ → 高级 → 回退位置
然后将“始终使用回退位置”和“回退位置已在使用时，不警告”的为False的默认值修改为True，这样当你再重新编译你的项目时就不会出现那个ipch文件夹，这样也就不会导致你的项目变得过大。

1. 用const修饰函数的参数

如果参数作输出用，不论它是什么数据类型，也不论它采用“指针传递”还是“引用传递”，都不能加const修饰，否则该参数将失去输出功能。const只能修饰输入参数：

如果输入参数采用“指针传递”，那么加const修饰可以防止意外地改动该指针，起到保护作用。

2.用const修饰函数的返回值
如果给以“指针传递”方式的函数返回值加const修饰，那么函数返回值（即指针）的内容不能被修改，该返回值只能被赋给加const修饰的同类型指针。

3.const 成员函数
任何不会修改数据成员的函数都应该声明为const类型。如果在编写const成员函数时，不慎修改了数据成员，或者调用了其它非const成员函数，编译器将指出错误，这无疑会提高程序的健壮性。